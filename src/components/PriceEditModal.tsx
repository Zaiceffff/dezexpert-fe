'use client';

import { useState, useEffect } from 'react';
import { Button } from '@/components/ui/button';
import { ButtonLoader, LoadingSpinner } from '@/components/ui/loading-spinner';
import { Input } from '@/components/ui/input';

import { Label } from '@/components/ui/label';
import { X, Save, RussianRuble } from 'lucide-react';
import { toast } from 'sonner';

import { getUserPrices, getDefaultPrices, validatePrices, type ServicePrices } from '@/lib/pricingApi';

interface PriceEditModalProps {
  isOpen: boolean;
  onClose: () => void;
  onOpen?: () => void;
  onSave: (prices: ServicePrices) => Promise<void>;
  initialPrices?: ServicePrices | null;
  isLoading?: boolean;
}

export default function PriceEditModal({ 
  isOpen, 
  onClose, 
  onOpen,
  onSave, 
  initialPrices, 
  isLoading = false 
}: PriceEditModalProps) {
  const [prices, setPrices] = useState<ServicePrices>({
    oneRoomLiquid: 0,
    oneRoomGel: 0,
    twoRoomLiquid: 0,
    twoRoomGel: 0,
    threeRoomLiquid: 0,
    threeRoomGel: 0,
    fourRoomLiquid: 0,
    fourRoomGel: 0,
    homeRoomLiquid: 0,
    homeRoomGel: 0,
    plotRoomLiquid: 0,
    plotRoomGel: 0,
    restaurantRoomLiquid: 0,
    restaurantRoomGel: 0
  });
  const [isSaving, setIsSaving] = useState(false);
  const [isLoadingPrices, setIsLoadingPrices] = useState(false);

  // –ó–∞–≥—Ä—É–∂–∞–µ–º —Ü–µ–Ω—ã –∏–∑ API –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ –º–æ–¥–∞–ª–∞
  useEffect(() => {
    if (isOpen) {
      loadPricesFromAPI();
      // –í—ã–∑—ã–≤–∞–µ–º onOpen –µ—Å–ª–∏ –æ–Ω –ø–µ—Ä–µ–¥–∞–Ω
      if (typeof onOpen === 'function') {
        onOpen();
      }
    }
  }, [isOpen]); // –£–±–∏—Ä–∞–µ–º onOpen –∏–∑ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π, —Ç–∞–∫ –∫–∞–∫ –æ–Ω –º–æ–∂–µ—Ç –±—ã—Ç—å undefined

  const loadPricesFromAPI = async () => {
    try {
      setIsLoadingPrices(true);
      const token = localStorage.getItem('auth_token');
      if (!token) {
        toast.error('–ù–µ–æ–±—Ö–æ–¥–∏–º–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è');
        return;
      }

      // –û—á–∏—â–∞–µ–º –∫—ç—à –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ –º–æ–¥–∞–ª–∞, —á—Ç–æ–±—ã –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å–≤–µ–∂–∏–µ —Ü–µ–Ω—ã
      localStorage.removeItem('user_prices');
      console.log('üóëÔ∏è –ö—ç—à —Ü–µ–Ω –æ—á–∏—â–µ–Ω –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ –º–æ–¥–∞–ª–∞');

      // –ü—Ä–æ–±—É–µ–º –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ü–µ–Ω—ã —á–µ—Ä–µ–∑ –Ω–æ–≤—ã–π API
      const userPrices = await getUserPrices(token);
      
      if (userPrices) {
        setPrices(userPrices);
        console.log('‚úÖ –¶–µ–Ω—ã –∑–∞–≥—Ä—É–∂–µ–Ω—ã –≤ –º–æ–¥–∞–ª:', userPrices);
      } else if (initialPrices) {
        // –ï—Å–ª–∏ —Ü–µ–Ω—ã –Ω–µ –∑–∞–≥—Ä—É–∑–∏–ª–∏—Å—å, –∏—Å–ø–æ–ª—å–∑—É–µ–º initialPrices
        setPrices(initialPrices);
        console.log('‚ö†Ô∏è –ò—Å–ø–æ–ª—å–∑—É–µ–º initialPrices:', initialPrices);
      } else {
        // –ï—Å–ª–∏ –Ω–µ—Ç initialPrices, –∏—Å–ø–æ–ª—å–∑—É–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        const defaultPrices = getDefaultPrices();
        setPrices(defaultPrices);
        console.log('‚ö†Ô∏è –ò—Å–ø–æ–ª—å–∑—É–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é:', defaultPrices);
      }
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ü–µ–Ω:', error);
      toast.warning('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ü–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é');
      
      if (initialPrices) {
        setPrices(initialPrices);
      } else {
        setPrices(getDefaultPrices());
      }
    } finally {
      setIsLoadingPrices(false);
    }
  };

  const handlePriceChange = (key: keyof ServicePrices, value: string) => {
    const numValue = parseInt(value) || 0;
    setPrices(prev => ({
      ...prev,
      [key]: numValue
    }));
  };

  const handleSave = async () => {
    try {
      setIsSaving(true);
      
      if (onSave) {
        await onSave(prices);
        onClose();
      } else {
        toast.error('–û—à–∏–±–∫–∞: —Ñ—É–Ω–∫—Ü–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –Ω–µ –ø–µ—Ä–µ–¥–∞–Ω–∞');
      }
    } catch (error) {
      toast.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —Ü–µ–Ω. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.');
    } finally {
      setIsSaving(false);
    }
  };

  const handleReset = () => {
    loadPricesFromAPI();
    toast.info('–¶–µ–Ω—ã –∑–∞–≥—Ä—É–∂–µ–Ω—ã —Å —Å–µ—Ä–≤–µ—Ä–∞');
  };

  if (!isOpen) return null;

  return (
    <div 
      className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-2 sm:p-4"
      onClick={onClose}
    >
      <div 
        className="bg-white rounded-2xl shadow-2xl w-full max-w-4xl max-h-[95vh] min-h-[600px] flex flex-col"
        onClick={(e) => e.stopPropagation()}
      >
        {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
        <div className="flex items-center justify-between p-4 sm:p-6 border-b border-gray-200 flex-shrink-0">
          <div className="flex items-center gap-3">
            <div className="p-2 bg-green-100 rounded-lg">
              <RussianRuble className="h-6 w-6 text-green-600" />
            </div>
            <div>
              <h2 className="text-2xl font-bold text-gray-900">–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ü–µ–Ω –Ω–∞ —É—Å–ª—É–≥–∏</h2>
              <p className="text-gray-600">–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ —Å—Ç–æ–∏–º–æ—Å—Ç—å –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ç–∏–ø–∞ –æ–±—ä–µ–∫—Ç–∞ –∏ –º–µ—Ç–æ–¥–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏</p>
            </div>
          </div>
          <button
            onClick={onClose}
            className="p-2 rounded-lg hover:bg-gray-100 transition-colors"
            aria-label="–ó–∞–∫—Ä—ã—Ç—å"
          >
            <X className="h-5 w-5 text-gray-500" />
          </button>
        </div>

        {/* –°–æ–¥–µ—Ä–∂–∏–º–æ–µ */}
        <div className="p-4 sm:p-6 overflow-y-auto flex-1 min-h-0">
          {isLoadingPrices ? (
            <div className="flex items-center justify-center py-12">
              <LoadingSpinner />
              <span className="ml-3 text-gray-600">–ó–∞–≥—Ä—É–∂–∞–µ–º —Ü–µ–Ω—ã...</span>
            </div>
          ) : (
            <div className="space-y-6 sm:space-y-8 pb-8">
              {/* –ö–≤–∞—Ä—Ç–∏—Ä—ã */}
              <div className="bg-gray-50 rounded-xl p-4 sm:p-6">
                <h3 className="text-lg font-semibold text-gray-900 mb-4 flex items-center gap-2">
                  <span className="w-2 h-2 bg-blue-500 rounded-full"></span>
                  –ö–≤–∞—Ä—Ç–∏—Ä—ã
                </h3>
                <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4">
                  {/* 1 –∫–æ–º–Ω–∞—Ç–∞ */}
                  <div className="space-y-3">
                    <Label className="text-sm font-medium text-gray-700">1 –∫–æ–º–Ω–∞—Ç–∞</Label>
                    <div className="space-y-2">
                      <div>
                        <Label className="text-xs text-gray-500">–ñ–∏–¥–∫–æ—Å—Ç—å</Label>
                        <Input
                          type="text"
                          inputMode="numeric"
                          value={prices.oneRoomLiquid || ''}
                          onChange={(e) => {
                            const value = e.target.value.replace(/\D/g, '');
                            handlePriceChange('oneRoomLiquid', value);
                          }}
                          onFocus={(e) => e.target.select()}
                          className="h-9 text-center font-medium text-lg"
                          placeholder="0"
                          maxLength={6}
                        />
                      </div>
                      <div>
                        <Label className="text-xs text-gray-500">–ì–µ–ª—å</Label>
                        <Input
                          type="text"
                          inputMode="numeric"
                          value={prices.oneRoomGel || ''}
                          onChange={(e) => {
                            const value = e.target.value.replace(/\D/g, '');
                            handlePriceChange('oneRoomGel', value);
                          }}
                          onFocus={(e) => e.target.select()}
                          className="h-9 text-center font-medium text-lg"
                          placeholder="0"
                          maxLength={6}
                        />
                      </div>
                    </div>
                  </div>

                  {/* 2 –∫–æ–º–Ω–∞—Ç—ã */}
                  <div className="space-y-3">
                    <Label className="text-sm font-medium text-gray-700">2 –∫–æ–º–Ω–∞—Ç—ã</Label>
                    <div className="space-y-2">
                      <div>
                        <Label className="text-xs text-gray-500">–ñ–∏–¥–∫–æ—Å—Ç—å</Label>
                        <Input
                          type="text"
                          inputMode="numeric"
                          value={prices.twoRoomLiquid || ''}
                          onChange={(e) => {
                            const value = e.target.value.replace(/\D/g, '');
                            handlePriceChange('twoRoomLiquid', value);
                          }}
                          onFocus={(e) => e.target.select()}
                          className="h-9 text-center font-medium text-lg"
                          placeholder="0"
                          maxLength={6}
                        />
                      </div>
                      <div>
                        <Label className="text-xs text-gray-500">–ì–µ–ª—å</Label>
                        <Input
                          type="text"
                          inputMode="numeric"
                          value={prices.twoRoomGel || ''}
                          onChange={(e) => {
                            const value = e.target.value.replace(/\D/g, '');
                            handlePriceChange('twoRoomGel', value);
                          }}
                          onFocus={(e) => e.target.select()}
                          className="h-9 text-center font-medium text-lg"
                          placeholder="0"
                          maxLength={6}
                        />
                      </div>
                    </div>
                  </div>

                  {/* 3 –∫–æ–º–Ω–∞—Ç—ã */}
                  <div className="space-y-3">
                    <Label className="text-sm font-medium text-gray-700">3 –∫–æ–º–Ω–∞—Ç—ã</Label>
                    <div className="space-y-2">
                      <div>
                        <Label className="text-xs text-gray-500">–ñ–∏–¥–∫–æ—Å—Ç—å</Label>
                        <Input
                          type="text"
                          inputMode="numeric"
                          value={prices.threeRoomLiquid || ''}
                          onChange={(e) => {
                            const value = e.target.value.replace(/\D/g, '');
                            handlePriceChange('threeRoomLiquid', value);
                          }}
                          onFocus={(e) => e.target.select()}
                          className="h-9 text-center font-medium text-lg"
                          placeholder="0"
                          maxLength={6}
                        />
                      </div>
                      <div>
                        <Label className="text-xs text-gray-500">–ì–µ–ª—å</Label>
                        <Input
                          type="text"
                          inputMode="numeric"
                          value={prices.threeRoomGel || ''}
                          onChange={(e) => {
                            const value = e.target.value.replace(/\D/g, '');
                            handlePriceChange('threeRoomGel', value);
                          }}
                          onFocus={(e) => e.target.select()}
                          className="h-9 text-center font-medium text-lg"
                          placeholder="0"
                          maxLength={6}
                        />
                      </div>
                    </div>
                  </div>

                  {/* 4+ –∫–æ–º–Ω–∞—Ç—ã */}
                  <div className="space-y-3">
                    <Label className="text-sm font-medium text-gray-700">4+ –∫–æ–º–Ω–∞—Ç—ã</Label>
                    <div className="space-y-2">
                      <div>
                        <Label className="text-xs text-gray-500">–ñ–∏–¥–∫–æ—Å—Ç—å</Label>
                        <Input
                          type="text"
                          inputMode="numeric"
                          value={prices.fourRoomLiquid || ''}
                          onChange={(e) => {
                            const value = e.target.value.replace(/\D/g, '');
                            handlePriceChange('fourRoomLiquid', value);
                          }}
                          onFocus={(e) => e.target.select()}
                          className="h-9 text-center font-medium text-lg"
                          placeholder="0"
                          maxLength={6}
                        />
                      </div>
                      <div>
                        <Label className="text-xs text-gray-500">–ì–µ–ª—å</Label>
                        <Input
                          type="text"
                          inputMode="numeric"
                          value={prices.fourRoomGel || ''}
                          onChange={(e) => {
                            const value = e.target.value.replace(/\D/g, '');
                            handlePriceChange('fourRoomGel', value);
                          }}
                          onFocus={(e) => e.target.select()}
                          className="h-9 text-center font-medium text-lg"
                          placeholder="0"
                          maxLength={6}
                        />
                      </div>
                    </div>
                  </div>
                </div>
              </div>

              {/* –ß–∞—Å—Ç–Ω—ã–µ –¥–æ–º–∞ –∏ —É—á–∞—Å—Ç–∫–∏ */}
              <div className="bg-gray-50 rounded-xl p-4 sm:p-6">
                <h3 className="text-lg font-semibold text-gray-900 mb-4 flex items-center gap-2">
                  <span className="w-2 h-2 bg-green-500 rounded-full"></span>
                  –ß–∞—Å—Ç–Ω—ã–µ –¥–æ–º–∞ –∏ —É—á–∞—Å—Ç–∫–∏
                </h3>
                <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                  {/* –ß–∞—Å—Ç–Ω—ã–π –¥–æ–º */}
                  <div className="space-y-3">
                    <Label className="text-sm font-medium text-gray-700">–ß–∞—Å—Ç–Ω—ã–π –¥–æ–º</Label>
                    <div className="space-y-2">
                      <div>
                        <Label className="text-xs text-gray-500">–ñ–∏–¥–∫–æ—Å—Ç—å</Label>
                        <Input
                          type="text"
                          inputMode="numeric"
                          value={prices.homeRoomLiquid || ''}
                          onChange={(e) => {
                            const value = e.target.value.replace(/\D/g, '');
                            handlePriceChange('homeRoomLiquid', value);
                          }}
                          onFocus={(e) => e.target.select()}
                          className="h-9 text-center font-medium text-lg"
                          placeholder="0"
                          maxLength={6}
                        />
                      </div>
                      <div>
                        <Label className="text-xs text-gray-500">–ì–µ–ª—å</Label>
                        <Input
                          type="text"
                          inputMode="numeric"
                          value={prices.homeRoomGel || ''}
                          onChange={(e) => {
                            const value = e.target.value.replace(/\D/g, '');
                            handlePriceChange('homeRoomGel', value);
                          }}
                          onFocus={(e) => e.target.select()}
                          className="h-9 text-center font-medium text-lg"
                          placeholder="0"
                          maxLength={6}
                        />
                      </div>
                    </div>
                  </div>

                  {/* –£—á–∞—Å—Ç–æ–∫ */}
                  <div className="space-y-3">
                    <Label className="text-sm font-medium text-gray-700">–£—á–∞—Å—Ç–æ–∫</Label>
                    <div className="space-y-2">
                      <div>
                        <Label className="text-xs text-gray-500">–ñ–∏–¥–∫–æ—Å—Ç—å</Label>
                        <Input
                          type="text"
                          inputMode="numeric"
                          value={prices.plotRoomLiquid || ''}
                          onChange={(e) => {
                            const value = e.target.value.replace(/\D/g, '');
                            handlePriceChange('plotRoomLiquid', value);
                          }}
                          onFocus={(e) => e.target.select()}
                          className="h-9 text-center font-medium text-lg"
                          placeholder="0"
                          maxLength={6}
                        />
                      </div>
                      <div>
                        <Label className="text-xs text-gray-500">–ì–µ–ª—å</Label>
                        <Input
                          type="text"
                          inputMode="numeric"
                          value={prices.plotRoomGel || ''}
                          onChange={(e) => {
                            const value = e.target.value.replace(/\D/g, '');
                            handlePriceChange('plotRoomGel', value);
                          }}
                          onFocus={(e) => e.target.select()}
                          className="h-9 text-center font-medium text-lg"
                          placeholder="0"
                          maxLength={6}
                        />
                      </div>
                    </div>
                  </div>
                </div>
              </div>

              {/* –ö–æ–º–º–µ—Ä—á–µ—Å–∫–∏–µ –æ–±—ä–µ–∫—Ç—ã */}
              <div className="bg-gray-50 rounded-xl p-4 sm:p-6">
                <h3 className="text-lg font-semibold text-gray-900 mb-4 flex items-center gap-2">
                  <span className="w-2 h-2 bg-purple-500 rounded-full"></span>
                  –ö–æ–º–º–µ—Ä—á–µ—Å–∫–∏–µ –æ–±—ä–µ–∫—Ç—ã
                </h3>
                <div className="space-y-3">
                  <Label className="text-sm font-medium text-gray-700">–†–µ—Å—Ç–æ—Ä–∞–Ω—ã, –æ—Ñ–∏—Å—ã, —Å–∫–ª–∞–¥—ã</Label>
                  <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                    <div>
                      <Label className="text-xs text-gray-500">–ñ–∏–¥–∫–æ—Å—Ç—å</Label>
                      <Input
                        type="text"
                        inputMode="numeric"
                        value={prices.restaurantRoomLiquid || ''}
                        onChange={(e) => {
                          const value = e.target.value.replace(/\D/g, '');
                          handlePriceChange('restaurantRoomLiquid', value);
                        }}
                        onFocus={(e) => e.target.select()}
                        className="h-9 text-center font-medium text-lg"
                        placeholder="0"
                        maxLength={6}
                      />
                    </div>
                    <div>
                      <Label className="text-xs text-gray-500">–ì–µ–ª—å</Label>
                      <Input
                        type="text"
                        inputMode="numeric"
                        value={prices.restaurantRoomGel || ''}
                        onChange={(e) => {
                          const value = e.target.value.replace(/\D/g, '');
                          handlePriceChange('restaurantRoomGel', value);
                        }}
                        onFocus={(e) => e.target.select()}
                        className="h-9 text-center font-medium text-lg"
                        placeholder="0"
                        maxLength={6}
                      />
                    </div>
                  </div>
                </div>
              </div>

              {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
              <div className="bg-blue-50 border border-blue-200 rounded-xl p-3 sm:p-4">
                <div className="flex items-start gap-3">
                  <div className="w-5 h-5 bg-blue-100 rounded-full flex items-center justify-center flex-shrink-0 mt-0.5">
                    <span className="text-blue-600 text-xs font-bold">i</span>
                  </div>
                  <div className="text-sm text-blue-800">
                    <p className="font-medium mb-1">–ö–∞–∫ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—Ç—å —Ü–µ–Ω—ã:</p>
                    <ul className="space-y-1 text-blue-700">
                      <li>‚Ä¢ <strong>–ñ–∏–¥–∫–æ—Å—Ç—å</strong> - –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–ª–æ–ø–æ–≤, –º—É—Ö, –æ—Å –∏ –¥—Ä—É–≥–∏—Ö –ª–µ—Ç–∞—é—â–∏—Ö –Ω–∞—Å–µ–∫–æ–º—ã—Ö</li>
                      <li>‚Ä¢ <strong>–ì–µ–ª—å</strong> - –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ç–∞—Ä–∞–∫–∞–Ω–æ–≤, –º—É—Ä–∞–≤—å–µ–≤ –∏ –ø–æ–ª–∑–∞—é—â–∏—Ö –Ω–∞—Å–µ–∫–æ–º—ã—Ö</li>
                      <li>‚Ä¢ –¶–µ–Ω—ã —É–∫–∞–∑—ã–≤–∞–π—Ç–µ –≤ —Ä—É–±–ª—è—Ö –±–µ–∑ –∫–æ–ø–µ–µ–∫</li>
                      <li>‚Ä¢ –£—á–∏—Ç—ã–≤–∞–π—Ç–µ —Å–ª–æ–∂–Ω–æ—Å—Ç—å –æ–±—ä–µ–∫—Ç–∞ –∏ –ø–ª–æ—â–∞–¥—å –æ–±—Ä–∞–±–æ—Ç–∫–∏</li>
                    </ul>
                  </div>
                </div>
              </div>
            </div>
          )}
        </div>

        {/* –ö–Ω–æ–ø–∫–∏ */}
        <div className="flex flex-col sm:flex-row items-center justify-between gap-4 p-4 sm:p-6 border-t border-gray-200 bg-gray-50 flex-shrink-0">
          <div className="flex items-center gap-3">
            <Button
              variant="outline"
              onClick={handleReset}
              disabled={isLoadingPrices || isSaving}
              className="border-gray-300 text-gray-700 hover:bg-gray-100 px-4 py-2"
            >
              {isLoadingPrices ? (
                <ButtonLoader />
              ) : (
                '–°–±—Ä–æ—Å–∏—Ç—å'
              )}
            </Button>
            <span className="text-sm text-gray-500">
              {isLoadingPrices ? '–ó–∞–≥—Ä—É–∂–∞–µ–º —Ü–µ–Ω—ã...' : '–¶–µ–Ω—ã –∑–∞–≥—Ä—É–∂–µ–Ω—ã —Å —Å–µ—Ä–≤–µ—Ä–∞'}
            </span>
          </div>
          <div className="flex items-center gap-3">
            <Button
              variant="outline"
              onClick={onClose}
              disabled={isSaving}
              className="border-gray-300 text-gray-700 hover:bg-gray-100 px-4 py-2"
            >
              –û—Ç–º–µ–Ω–∞
            </Button>
            <Button
              onClick={handleSave}
              disabled={isSaving}
              className="bg-green-600 hover:bg-green-700 text-white px-6 py-2 font-medium"
            >
              {isSaving ? (
                <ButtonLoader />
              ) : (
                <>
                  <Save className="h-4 w-4 mr-2" />
                  –°–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ü–µ–Ω—ã
                </>
              )}
            </Button>
          </div>
        </div>
      </div>
    </div>
  );
}
