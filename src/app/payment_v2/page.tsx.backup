// src/app/payment_v2/page.tsx ‚Äî —Å—Ç—Ä–∞–Ω–∏—Ü–∞ —Ç–∞—Ä–∏—Ñ–æ–≤ Dezexpert
'use client';
import { useState, useEffect } from 'react';
import Link from 'next/link';
import { Button } from '@/components/ui/button';
import Footer from '@/components/Footer';
import { Check, Star, Zap, Shield, Users, BarChart3, MessageSquare, Globe, Settings, Crown, RefreshCw } from 'lucide-react';
import { toast } from 'sonner';
import { apiClient } from '@/lib/api';

export default function PaymentPage() {
  const [loadingStates, setLoadingStates] = useState<{[key: string]: boolean}>({});
  const [currentUser, setCurrentUser] = useState<any>(null);
  const [userTariff, setUserTariff] = useState<any>(null);
  const [plans, setPlans] = useState<any[]>([]);
  const [isLoadingPlans, setIsLoadingPlans] = useState(true);
  const [expandedFeatures, setExpandedFeatures] = useState<{[key: string]: boolean}>({});
  const [isSwitchingToTrial, setIsSwitchingToTrial] = useState(false);

  const [enterprise, setEnterprise] = useState({
    name: '–ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–π',
    description: '–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è –¥–ª—è –∫—Ä—É–ø–Ω—ã—Ö –∫–æ–º–ø–∞–Ω–∏–π',
    features: [
      '–ù–µ–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π',
      '–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–∞—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞ —Ñ—É–Ω–∫—Ü–∏–π',
      '–í—ã–¥–µ–ª–µ–Ω–Ω—ã–π —Å–µ—Ä–≤–µ—Ä',
      'SLA –≥–∞—Ä–∞–Ω—Ç–∏–∏',
      '–û–±—É—á–µ–Ω–∏–µ –ø–µ—Ä—Å–æ–Ω–∞–ª–∞',
      '–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–º–∏ —Å–∏—Å—Ç–µ–º–∞–º–∏',
      '–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –∞–∫–∫–∞—É–Ω—Ç-–º–µ–Ω–µ–¥–∂–µ—Ä'
    ]
  });

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
  const getAuthToken = (): string | null => {
    return localStorage.getItem('auth_token') || 
           localStorage.getItem('token') || 
           sessionStorage.getItem('token');
  };

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ç–∞—Ä–∏—Ñ–æ–≤ –∏–∑ API
  const fetchTariffs = async () => {
    try {
      const response = await fetch(`${process.env.HOST || 'https://api.bugbot.ru'}/tariff/list`, {
        headers: {
          'accept': 'application/json'
        }
      });

      if (response.ok) {
        const tariffsData = await response.json();
        
        // –§–∏–ª—å—Ç—Ä—É–µ–º –Ω—É–∂–Ω—ã–µ —Ç–∞—Ä–∏—Ñ—ã: "–ü—Ä–æ–±–Ω—ã–π –ø–ª–∞–Ω", "–í—Å–µ–≥–¥–∞ –≤–º–µ—Å—Ç–µ", "–í—Å–µ–≥–¥–∞ –≤–º–µ—Å—Ç–µ +", "–í—Å–µ–≥–¥–∞ –≤–º–µ—Å—Ç–µ –ü—Ä–æ–º–æ", "–ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–π"
        const allowedTariffNames = [
          '–ü—Ä–æ–±–Ω—ã–π –ø–ª–∞–Ω',
          '–ü–ª–∞–Ω\n"–í—Å–µ–≥–¥–∞ –≤–º–µ—Å—Ç–µ"',
          '–ü–ª–∞–Ω\n"–í—Å–µ–≥–¥–∞ –≤–º–µ—Å—Ç–µ+"',
          '–ü–ª–∞–Ω\r\n"–í—Å–µ–≥–¥–∞ –≤–º–µ—Å—Ç–µ –ü—Ä–æ–º–æ"',
          '–ü–ª–∞–Ω "–ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–π"'
        ];
        
        const activeTariffs = tariffsData
          .filter((tariff: any) => 
            tariff.isActive && 
            allowedTariffNames.some(name => tariff.name.includes(name.replace(/–ü–ª–∞–Ω\s*["\n\r]/g, '').trim()))
          )
          .map((tariff: any) => ({
            id: tariff.id,
            name: tariff.name.replace(/–ü–ª–∞–Ω\s*["\n\r]/g, '').trim(), // –£–±–∏—Ä–∞–µ–º "–ü–ª–∞–Ω" –∏ –ø–µ—Ä–µ–Ω–æ—Å—ã —Å—Ç—Ä–æ–∫
            price: tariff.price === '0' ? '0 ‚ÇΩ' : 
                   tariff.name.includes('–ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–π') ? '–û–ë–°–£–î–ò–ú' : `${tariff.price} ‚ÇΩ`,
            period: tariff.price === '0' ? '–Ω–∞–≤—Å–µ–≥–¥–∞' : 
                    tariff.name.includes('–ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–π') ? '' : 
                    tariff.name.includes('–ü—Ä–æ–º–æ') ? ' (–∞–∫—Ü–∏—è)' : '/–º–µ—Å—è—Ü',
            description: getTariffDescription(tariff.name, tariff.price),
            popular: tariff.name.includes('–í—Å–µ–≥–¥–∞ –≤–º–µ—Å—Ç–µ') && !tariff.name.includes('+') && !tariff.name.includes('–ü—Ä–æ–º–æ'), // "–í—Å–µ–≥–¥–∞ –≤–º–µ—Å—Ç–µ" –∫–∞–∫ –ø–æ–ø—É–ª—è—Ä–Ω—ã–π (–Ω–æ –Ω–µ –ø—Ä–æ–º–æ)
            features: tariff.advantages,
            cta: getTariffCTA(tariff.name, tariff.price),
            href: tariff.price === '0' ? '/register' : null,
            isFree: tariff.price === '0' && !tariff.name.includes('–ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–π') && !tariff.name.includes('–ü—Ä–æ–º–æ'),
            isPromo: tariff.isPromo,
            originalPrice: tariff.price
          }));

        // –°–æ—Ä—Ç–∏—Ä—É–µ–º —Ç–∞—Ä–∏—Ñ—ã: –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π –ø–µ—Ä–≤—ã–π, –∑–∞—Ç–µ–º –ø–æ —Ü–µ–Ω–µ, –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–π –ø–æ—Å–ª–µ–¥–Ω–∏–π
        const sortedTariffs = activeTariffs.sort((a: any, b: any) => {
          if (a.isFree) return -1;
          if (b.isFree) return 1;
          if (a.name.includes('–ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–π')) return 1;
          if (b.name.includes('–ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–π')) return -1;
          return parseInt(a.originalPrice) - parseInt(b.originalPrice);
        });

        setPlans(sortedTariffs);

        // –ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–π —Ç–∞—Ä–∏—Ñ —Ç–µ–ø–µ—Ä—å –≤–∫–ª—é—á–µ–Ω –≤ –æ—Å–Ω–æ–≤–Ω—É—é —Å–µ—Ç–∫—É
        // –û–±–Ω–æ–≤–ª—è–µ–º enterprise –¥–ª—è –æ—Ç–¥–µ–ª—å–Ω–æ–π —Å–µ–∫—Ü–∏–∏
        const corporateTariff = tariffsData.find((tariff: any) => 
          tariff.isActive && tariff.name.includes('–ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–π')
        );

        if (corporateTariff) {
          setEnterprise({
            name: corporateTariff.name.replace(/–ü–ª–∞–Ω\s*["\n\r]/g, '').trim(),
            description: '–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è –¥–ª—è –∫—Ä—É–ø–Ω—ã—Ö –∫–æ–º–ø–∞–Ω–∏–π',
            features: corporateTariff.advantages
          });
        }
      } else {
        throw new Error(`–û—à–∏–±–∫–∞ ${response.status}: ${response.statusText}`);
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ç–∞—Ä–∏—Ñ–æ–≤:', error);
      toast.error('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ç–∞—Ä–∏—Ñ—ã');
    } finally {
      setIsLoadingPlans(false);
    }
  };

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ–ø–∏—Å–∞–Ω–∏—è —Ç–∞—Ä–∏—Ñ–∞
  const getTariffDescription = (name: string, price: string): string => {
    if (price === '0') return '–ò–¥–µ–∞–ª—å–Ω–æ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏ –Ω–µ–±–æ–ª—å—à–∏—Ö –∫–æ–º–ø–∞–Ω–∏–π';
    if (name.includes('–í—Å–µ–≥–¥–∞ –≤–º–µ—Å—Ç–µ') && !name.includes('+') && !name.includes('–ü—Ä–æ–º–æ')) return '–î–ª—è —Ä–∞—Å—Ç—É—â–∏—Ö –∫–æ–º–ø–∞–Ω–∏–π —Å –∞–∫—Ç–∏–≤–Ω—ã–º –ø–æ—Ç–æ–∫–æ–º –∑–∞—è–≤–æ–∫';
    if (name.includes('–í—Å–µ–≥–¥–∞ –≤–º–µ—Å—Ç–µ+')) return '–î–ª—è –∫–æ–º–∞–Ω–¥ –∏ –∫–æ–º–ø–∞–Ω–∏–π —Å –≤—ã—Å–æ–∫–∏–º–∏ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º–∏';
    if (name.includes('–í—Å–µ–≥–¥–∞ –≤–º–µ—Å—Ç–µ –ü—Ä–æ–º–æ')) return '–°–ø–µ—Ü–∏–∞–ª—å–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ —Å—Ç–∞—Ä—Ç–∞';
    if (name.includes('–ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–π')) return '–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è –¥–ª—è –∫—Ä—É–ø–Ω—ã—Ö –∫–æ–º–ø–∞–Ω–∏–π';
    return '–û–ø—Ç–∏–º–∞–ª—å–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ –¥–ª—è –≤–∞—à–µ–≥–æ –±–∏–∑–Ω–µ—Å–∞';
  };

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ç–µ–∫—Å—Ç–∞ –∫–Ω–æ–ø–∫–∏
  const getTariffCTA = (name: string, price: string): string => {
    if (price === '0') return '–ù–∞—á–∞—Ç—å –±–µ—Å–ø–ª–∞—Ç–Ω–æ';
    if (name.includes('–ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–π')) return '–°–≤—è–∑–∞—Ç—å—Å—è';
    if (name.includes('–í—Å–µ–≥–¥–∞ –≤–º–µ—Å—Ç–µ')) return '–í—ã–±—Ä–∞—Ç—å –ø–ª–∞–Ω';
    return '–í—ã–±—Ä–∞—Ç—å –ø–ª–∞–Ω';
  };

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–π
  const toggleFeaturesExpansion = (planId: string) => {
    setExpandedFeatures(prev => ({
      ...prev,
      [planId]: !prev[planId]
    }));
  };

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
  const fetchUserInfo = async () => {
    const token = getAuthToken();
    if (!token) return;

    try {
      const response = await fetch(`${process.env.HOST || 'https://api.bugbot.ru'}/user/profile`, {
        headers: {
          'Authorization': `Bearer ${token}`,
          'Content-Type': 'application/json'
        }
      });

      if (response.ok) {
        const userData = await response.json();
        console.log('üìä –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', userData);
        console.log('üîç –°—Ç–∞—Ç—É—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', userData.status);
        console.log('üîç –û–±—ä–µ–∫—Ç tariff:', userData.tariff);
        console.log('üîç –¶–µ–Ω–∞ —Ç–∞—Ä–∏—Ñ–∞:', userData.tariff?.price);
        setCurrentUser(userData);

        // –õ–æ–≥–∏–∫–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–≥–æ —Ç–∞—Ä–∏—Ñ–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        let tariffInfo = null;
        
        // –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç: —Å–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—ä–µ–∫—Ç tariff (–æ–ø–ª–∞—á–µ–Ω–Ω—ã–π —Ç–∞—Ä–∏—Ñ)
        if (userData.tariff && userData.tariff.id && userData.tariff.price !== '0') {
          // –ï—Å–ª–∏ –µ—Å—Ç—å –æ–±—ä–µ–∫—Ç tariff —Å ID –∏ —Ü–µ–Ω–æ–π –Ω–µ 0 - —ç—Ç–æ –æ–ø–ª–∞—á–µ–Ω–Ω—ã–π —Ç–∞—Ä–∏—Ñ
          tariffInfo = userData.tariff;
          console.log('–û–±–Ω–∞—Ä—É–∂–µ–Ω –æ–ø–ª–∞—á–µ–Ω–Ω—ã–π —Ç–∞—Ä–∏—Ñ:', tariffInfo);
        } else if (userData.status === 'Trial' && (!userData.tariff || userData.tariff.price === '0')) {
          // –ï—Å–ª–∏ —Å—Ç–∞—Ç—É—Å Trial –ò –Ω–µ—Ç —Ç–∞—Ä–∏—Ñ–∞ –∏–ª–∏ —Ç–∞—Ä–∏—Ñ –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π - —ç—Ç–æ –ø—Ä–æ–±–Ω—ã–π –ø–ª–∞–Ω
          tariffInfo = { id: 'trial', name: '–ü—Ä–æ–±–Ω—ã–π –ø–ª–∞–Ω', price: '0 ‚ÇΩ', period: '–Ω–∞–≤—Å–µ–≥–¥–∞' };
          console.log('–°—Ç–∞—Ç—É—Å Trial + –Ω–µ—Ç –æ–ø–ª–∞—á–µ–Ω–Ω–æ–≥–æ —Ç–∞—Ä–∏—Ñ–∞ ‚Äî –ø—Ä–æ–±–Ω—ã–π –ø–ª–∞–Ω:', tariffInfo);
        } else if (userData.status === 'Active' && userData.tariff) {
          // –ï—Å–ª–∏ —Å—Ç–∞—Ç—É—Å Active –∏ –µ—Å—Ç—å –æ–±—ä–µ–∫—Ç tariff - —ç—Ç–æ –æ–ø–ª–∞—á–µ–Ω–Ω—ã–π —Ç–∞—Ä–∏—Ñ
          tariffInfo = userData.tariff;
          console.log('–°—Ç–∞—Ç—É—Å Active + –æ–±—ä–µ–∫—Ç tariff - –æ–ø–ª–∞—á–µ–Ω–Ω—ã–π —Ç–∞—Ä–∏—Ñ:', tariffInfo);
        } else if (userData.tariff) {
          // –ï—Å–ª–∏ –µ—Å—Ç—å –æ–±—ä–µ–∫—Ç tariff, –Ω–æ —Å—Ç–∞—Ç—É—Å –Ω–µ Active (–≤–æ–∑–º–æ–∂–Ω–æ –ø–µ—Ä–µ—Ö–æ–¥–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ)
          tariffInfo = userData.tariff;
          console.log('–ï—Å—Ç—å –æ–±—ä–µ–∫—Ç tariff, –Ω–æ —Å—Ç–∞—Ç—É—Å –Ω–µ Active (–ø–µ—Ä–µ—Ö–æ–¥–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ):', tariffInfo);
        }
        
        // –ï—Å–ª–∏ —Ç–∞—Ä–∏—Ñ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω, —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –µ–≥–æ
        if (tariffInfo) {
          setUserTariff(tariffInfo);
          return;
        }
        
        // –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–∞—Ä–∏—Ñ–µ –∏–∑ —Ä–∞–∑–Ω—ã—Ö –≤–æ–∑–º–æ–∂–Ω—ã—Ö –ø–æ–ª–µ–π
        if (userData.tariff) {
          tariffInfo = userData.tariff;
        } else if (userData.tariffPlan) {
          tariffInfo = userData.tariffPlan;
        } else if (userData.subscription) {
          tariffInfo = userData.subscription;
        } else if (userData.currentTariff) {
          tariffInfo = userData.currentTariff;
        }
        
        console.log('–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–∞—Ä–∏—Ñ–µ –∏–∑ –ø—Ä–æ—Ñ–∏–ª—è:', tariffInfo);
        
        // –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–∞—Ä–∏—Ñ–µ –∏–∑ –ø—Ä–æ—Ñ–∏–ª—è, 
        // –ø–æ–ø—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å –∏–∑ –æ—Ç–¥–µ–ª—å–Ω–æ–≥–æ API
        if (!tariffInfo) {
          try {
            const tariffResponse = await fetch(`${process.env.HOST || 'https://api.bugbot.ru'}/user/service`, {
              headers: {
                'Authorization': `Bearer ${token}`,
                'Content-Type': 'application/json'
              }
            });
            
            if (tariffResponse.ok) {
              const serviceData = await tariffResponse.json();
              console.log('–î–∞–Ω–Ω—ã–µ –æ —Å–µ—Ä–≤–∏—Å–µ/—Ç–∞—Ä–∏—Ñ–µ:', serviceData);
              
              // –ü—ã—Ç–∞–µ–º—Å—è –∏–∑–≤–ª–µ—á—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–∞—Ä–∏—Ñ–µ
              if (serviceData.tariff) {
                tariffInfo = serviceData.tariff;
              } else if (serviceData.currentPlan) {
                tariffInfo = serviceData.currentPlan;
              }
            }
          } catch (tariffError) {
            console.log('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–∞—Ä–∏—Ñ–µ –∏–∑ /user/service:', tariffError);
          }
        }
        
        console.log('–§–∏–Ω–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–∞—Ä–∏—Ñ–µ:', tariffInfo);
        setUserTariff(tariffInfo);
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ:', error);
    }
  };

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–ª–∞—Ç–µ–∂–Ω–æ–π —Å—Å—ã–ª–∫–∏
  const createPaymentLink = async (tariffId: string) => {
    const token = getAuthToken();
    if (!token) {
      toast.error('–¢—Ä–µ–±—É–µ—Ç—Å—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è');
      return;
    }

    setLoadingStates(prev => ({ ...prev, [tariffId]: true }));
    try {
      const response = await fetch(`${process.env.HOST || 'https://api.bugbot.ru'}/payment/payment-link/${tariffId}`, {
        headers: {
          'Authorization': `Bearer ${token}`,
          'Content-Type': 'application/json'
        }
      });

      if (response.ok) {
        const responseData = await response.json();
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –æ—Ç–≤–µ—Ç–∞ –∏ –∏–∑–≤–ª–µ–∫–∞–µ–º —Å—Å—ã–ª–∫—É
        let paymentLink;
        if (typeof responseData === 'string') {
          // –ï—Å–ª–∏ API –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø—Ä—è–º—É—é —Å—Ç—Ä–æ–∫—É
          paymentLink = responseData;
        } else if (responseData.paymentLink) {
          // –ï—Å–ª–∏ API –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ–±—ä–µ–∫—Ç —Å paymentLink
          paymentLink = responseData.paymentLink;
        } else if (responseData.url) {
          // –ï—Å–ª–∏ API –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ–±—ä–µ–∫—Ç —Å url
          paymentLink = responseData.url;
        } else if (responseData.link) {
          // –ï—Å–ª–∏ API –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ–±—ä–µ–∫—Ç —Å link
          paymentLink = responseData.link;
        } else {
          console.error('–ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞ API:', responseData);
          throw new Error('–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞ –æ—Ç API');
        }
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å—Å—ã–ª–∫–∞ –≤–∞–ª–∏–¥–Ω–∞—è –∏ –≤–µ–¥–µ—Ç –Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –¥–æ–º–µ–Ω
        if (!paymentLink || !paymentLink.startsWith('http')) {
          throw new Error('–ü–æ–ª—É—á–µ–Ω–∞ –Ω–µ–≤–µ—Ä–Ω–∞—è —Å—Å—ã–ª–∫–∞ –æ—Ç API');
        }
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å—Å—ã–ª–∫–∞ –≤–µ–¥–µ—Ç –Ω–∞ merch.tochka.com
        if (!paymentLink.includes('merch.tochka.com')) {
          console.warn('–°—Å—ã–ª–∫–∞ –≤–µ–¥–µ—Ç –Ω–µ –Ω–∞ –æ–∂–∏–¥–∞–µ–º—ã–π –¥–æ–º–µ–Ω:', paymentLink);
        }
        
        // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Ä–µ–¥–∏—Ä–µ–∫—Ç —Å dezexpert.pro –Ω–∞ —Ç–µ–∫—É—â–∏–π –¥–æ–º–µ–Ω –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
        if (paymentLink.includes('dezexpert.pro')) {
          const currentOrigin = window.location.origin;
          const localPaymentLink = paymentLink.replace('https://dezexpert.pro', currentOrigin);
          console.log('–ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —Ç–µ–∫—É—â–∏–π –¥–æ–º–µ–Ω:', localPaymentLink);
          paymentLink = localPaymentLink;
        }
        
        console.log('–°–æ–∑–¥–∞–Ω–∞ –ø–ª–∞—Ç–µ–∂–Ω–∞—è —Å—Å—ã–ª–∫–∞:', paymentLink);
        
        // –û—Ç–∫—Ä—ã–≤–∞–µ–º –ø–ª–∞—Ç–µ–∂–Ω—É—é —Å—Å—ã–ª–∫—É –≤ –Ω–æ–≤–æ–º –æ–∫–Ω–µ
        window.open(paymentLink, '_blank');
        toast.success('–ü–ª–∞—Ç–µ–∂–Ω–∞—è —Å—Å—ã–ª–∫–∞ —Å–æ–∑–¥–∞–Ω–∞!');
      } else {
        throw new Error(`–û—à–∏–±–∫–∞ ${response.status}: ${response.statusText}`);
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–ª–∞—Ç–µ–∂–Ω–æ–π —Å—Å—ã–ª–∫–∏:', error);
      
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –±–æ–ª–µ–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
      if (error instanceof Error) {
        toast.error(`–û—à–∏–±–∫–∞: ${error.message}`);
      } else {
        toast.error('–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –ø–ª–∞—Ç–µ–∂–Ω—É—é —Å—Å—ã–ª–∫—É');
      }
    } finally {
      setLoadingStates(prev => ({ ...prev, [tariffId]: false }));
    }
  };

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤—ã–±–æ—Ä–∞ —Ç–∞—Ä–∏—Ñ–∞
  const handleTariffSelect = async (plan: any) => {
    if (plan.isFree) {
      // –î–ª—è –±–µ—Å–ø–ª–∞—Ç–Ω–æ–≥–æ —Ç–∞—Ä–∏—Ñ–∞ - –ø–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é
      window.location.href = plan.href;
      return;
    }

    // –î–ª—è –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω–æ–≥–æ —Ç–∞—Ä–∏—Ñ–∞ - –ø–µ—Ä–µ—Ö–æ–¥ –Ω–∞ –∫–æ–Ω—Ç–∞–∫—Ç–Ω—É—é —Ñ–æ—Ä–º—É
    if (plan.name.includes('–ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–π')) {
      window.location.href = '/app/dashboard';
      return;
    }

    // –î–ª—è –ø–ª–∞—Ç–Ω—ã—Ö —Ç–∞—Ä–∏—Ñ–æ–≤ –ø—Ä–æ–≤–µ—Ä—è–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é
    const token = getAuthToken();
    if (!token) {
      toast.error('–î–ª—è –≤—ã–±–æ—Ä–∞ –ø–ª–∞—Ç–Ω–æ–≥–æ —Ç–∞—Ä–∏—Ñ–∞ —Ç—Ä–µ–±—É–µ—Ç—Å—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è');
      return;
    }

    // –°–æ–∑–¥–∞–µ–º –ø–ª–∞—Ç–µ–∂–Ω—É—é —Å—Å—ã–ª–∫—É
    await createPaymentLink(plan.id);
  };

  // –ó–∞–≥—Ä—É–∂–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –∏ —Ç–∞—Ä–∏—Ñ—ã –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
  useEffect(() => {
    fetchTariffs();
    fetchUserInfo();
  }, []);

  return (
    <div className="min-h-screen bg-gradient-to-br from-slate-50 via-green-50 to-emerald-50 flex flex-col">
      <div className="flex-1">
        {/* Header Section */}
        <section className="pt-16 sm:pt-20 pb-12 sm:pb-16 px-4 sm:px-6 lg:px-8">
          <div className="max-w-4xl mx-auto text-center">
            <h1 className="text-3xl sm:text-4xl md:text-5xl font-bold text-gray-900 mb-4 sm:mb-6">
              –í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–π —Ç–∞—Ä–∏—Ñ
            </h1>
            <p className="text-lg sm:text-xl text-gray-600 leading-relaxed">
              –ü—Ä–æ–∑—Ä–∞—á–Ω–æ–µ —Ü–µ–Ω–æ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –±–µ–∑ —Å–∫—Ä—ã—Ç—ã—Ö –∫–æ–º–∏—Å—Å–∏–π. –ù–∞—á–Ω–∏—Ç–µ –±–µ—Å–ø–ª–∞—Ç–Ω–æ –∏ –º–∞—Å—à—Ç–∞–±–∏—Ä—É–π—Ç–µ—Å—å –ø–æ –º–µ—Ä–µ —Ä–æ—Å—Ç–∞.
            </p>
            
            {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–µ–∫—É—â–µ–º —Ç–∞—Ä–∏—Ñ–µ */}
            {currentUser && userTariff ? (
              <div className="mt-8 relative">
                {/* –î–µ–∫–æ—Ä–∞—Ç–∏–≤–Ω—ã–π —Ñ–æ–Ω */}
                <div className="absolute inset-0 bg-gradient-to-r from-green-100/50 via-emerald-100/30 to-teal-100/50 rounded-3xl blur-xl"></div>
                
                <div className="relative bg-white/90 backdrop-blur-sm rounded-3xl border border-green-200/50 shadow-xl overflow-hidden">
                  {/* –í–µ—Ä—Ö–Ω—è—è –ø–æ–ª–æ—Å–∞ —Å –≥—Ä–∞–¥–∏–µ–Ω—Ç–æ–º */}
                  <div className="h-2 bg-gradient-to-r from-green-500 via-emerald-500 to-teal-500"></div>
                  
                  <div className="p-8">
                    <div className="flex flex-col lg:flex-row items-start lg:items-center justify-between gap-6">
                      {/* –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–∞—Ä–∏—Ñ–µ */}
                      <div className="flex-1">
                        <div className="flex items-center gap-3 mb-4">
                          <div className="w-12 h-12 bg-gradient-to-r from-green-500 to-emerald-500 rounded-xl flex items-center justify-center shadow-lg">
                            <Crown className="w-6 h-6 text-white" />
                          </div>
                          <div>
                            <p className="text-sm font-medium text-green-600 uppercase tracking-wide">–¢–µ–∫—É—â–∏–π —Ç–∞—Ä–∏—Ñ</p>
                            <h3 className="text-2xl font-bold bg-gradient-to-r from-green-600 to-emerald-600 bg-clip-text text-transparent">
                              {typeof userTariff === 'string' ? userTariff : (userTariff.name || userTariff.planName || '–ù–µ –≤—ã–±—Ä–∞–Ω')}
                            </h3>
                          </div>
                        </div>
                        
                        {/* –î–µ—Ç–∞–ª–∏ —Ç–∞—Ä–∏—Ñ–∞ */}
                        <div className="grid grid-cols-1 sm:grid-cols-2 gap-4">
                          {userTariff && typeof userTariff === 'object' && userTariff.price && (
                            <div className="bg-gradient-to-r from-green-50 to-emerald-50 rounded-xl p-4 border border-green-100">
                              <p className="text-xs font-medium text-green-600 uppercase tracking-wide mb-1">–°—Ç–æ–∏–º–æ—Å—Ç—å</p>
                              <p className="text-2xl font-bold text-green-700">
                                {userTariff.price} <span className="text-sm font-normal text-green-600">{userTariff.period || '/–º–µ—Å—è—Ü'}</span>
                              </p>
                            </div>
                          )}
                          
                          <div className="bg-gradient-to-r from-blue-50 to-indigo-50 rounded-xl p-4 border border-blue-100">
                            <p className="text-xs font-medium text-blue-600 uppercase tracking-wide mb-1">–°—Ç–∞—Ç—É—Å</p>
                            <div className="flex items-center gap-2">
                              <div className="w-2 h-2 bg-green-500 rounded-full animate-pulse"></div>
                              <p className="text-lg font-semibold text-blue-700">
                                {currentUser?.status || '–ù–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω'}
                              </p>
                            </div>
                          </div>
                        </div>
                        
                        {/* ID —Ç–∞—Ä–∏—Ñ–∞ */}
                        <div className="mt-4 bg-gray-50 rounded-lg p-3 border border-gray-200">
                          <p className="text-xs font-medium text-gray-500 uppercase tracking-wide mb-1">ID —Ç–∞—Ä–∏—Ñ–∞</p>
                          <p className="text-sm font-mono text-gray-700 bg-white px-3 py-1 rounded border">
                            {userTariff.id}
                          </p>
                        </div>
                      </div>
                      
                      {/* –ö–Ω–æ–ø–∫–∞ –¥–µ–π—Å—Ç–≤–∏—è */}
                      {userTariff && typeof userTariff === 'object' && userTariff.id !== 'trial' && userTariff.id !== 'basic' && userTariff.price !== '0' && (
                        <div className="flex flex-col gap-2">
                          <Button
                            onClick={async () => {
                          const token = getAuthToken();
                          if (!token) {
                            toast.error('–¢—Ä–µ–±—É–µ—Ç—Å—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è');
                            return;
                          }

                                                  setIsSwitchingToTrial(true);
                        try {
                          console.log('üîÑ –ü–µ—Ä–µ–≤–æ–¥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ –ø—Ä–æ–±–Ω—ã–π –ø–µ—Ä–∏–æ–¥ (—Å –±—ç–∫–µ–Ω–¥–æ–º)...');
                          console.log('üìä –¢–µ–∫—É—â–∏–π —Ç–∞—Ä–∏—Ñ:', userTariff);

                          // 1) –ü–æ–ø—Ä–æ–±—É–µ–º –æ—Ç–º–µ–Ω–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É (–µ—Å–ª–∏ –µ—Å—Ç—å)
                          try {
                            await apiClient.cancelSubscription();
                          } catch (e) {
                            console.warn('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–∑–≤–∞—Ç—å cancelSubscription, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º:', e);
                          }

                          // 2) –í—ã—Å—Ç–∞–≤–∏–º —Å—Ç–∞—Ç—É—Å Trial –Ω–∞ –±—ç–∫–µ–Ω–¥–µ –∏ –æ—Ç–≤—è–∂–µ–º —Ç–∞—Ä–∏—Ñ
                          const userId = currentUser?.id;
                          if (userId) {
                            try {
                              await fetch(`${process.env.HOST || 'https://api.bugbot.ru'}/user/by-id/${userId}`, {
                                method: 'PATCH',
                                headers: {
                                  'Authorization': `Bearer ${token}`,
                                  'Content-Type': 'application/json'
                                },
                                body: JSON.stringify({ status: 'Trial' })
                              });
                            } catch (e) {
                              console.warn('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç—É—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ Trial:', e);
                            }

                            let tariffCleared = false;
                            try {
                              const resp = await fetch(`${process.env.HOST || 'https://api.bugbot.ru'}/user/by-id/${userId}`, {
                                method: 'PATCH',
                                headers: {
                                  'Authorization': `Bearer ${token}`,
                                  'Content-Type': 'application/json'
                                },
                                body: JSON.stringify({ tariffId: null })
                              });
                              tariffCleared = resp.ok;
                            } catch {}

                            if (!tariffCleared) {
                              try {
                                await fetch(`${process.env.HOST || 'https://api.bugbot.ru'}/user/by-id/${userId}`, {
                                  method: 'PATCH',
                                  headers: {
                                    'Authorization': `Bearer ${token}`,
                                    'Content-Type': 'application/json'
                                  },
                                  body: JSON.stringify({ tariff: null })
                                });
                              } catch (e) {
                                console.warn('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —è–≤–Ω–æ –æ—Ç–≤—è–∑–∞—Ç—å —Ç–∞—Ä–∏—Ñ:', e);
                              }
                            }
                          }

                          // 3) –°–Ω–∞—á–∞–ª–∞ –æ–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ –±–∞–∑—ã
                          await fetchUserInfo();
                          
                          // 4) –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å—Ç–∞—Ç—É—Å –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –∏–∑–º–µ–Ω–∏–ª—Å—è –Ω–∞ Trial
                          const updatedResponse = await fetch(`${process.env.HOST || 'https://api.bugbot.ru'}/user/profile`, {
                            headers: {
                              'Authorization': `Bearer ${token}`,
                              'Content-Type': 'application/json'
                            }
                          });
                          
                          if (updatedResponse.ok) {
                            const updatedUserData = await updatedResponse.json();
                            console.log('üìä –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', updatedUserData);
                            
                            if (updatedUserData.status === 'Trial') {
                              toast.success('–ü–µ—Ä–µ–≤–µ–¥–µ–Ω–æ –Ω–∞ –ø—Ä–æ–±–Ω—ã–π –ø–µ—Ä–∏–æ–¥!');
                            } else {
                              toast.warning('–°—Ç–∞—Ç—É—Å –æ–±–Ω–æ–≤–ª–µ–Ω, –Ω–æ –º–æ–∂–µ—Ç –ø–æ—Ç—Ä–µ–±–æ–≤–∞—Ç—å—Å—è –≤—Ä–µ–º—è –¥–ª—è –ø–æ–ª–Ω–æ–≥–æ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π');
                            }
                          } else {
                            toast.success('–ó–∞–ø—Ä–æ—Å –Ω–∞ –ø–µ—Ä–µ—Ö–æ–¥ –Ω–∞ –ø—Ä–æ–±–Ω—ã–π –ø–µ—Ä–∏–æ–¥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!');
                          }
                        } catch (error: unknown) {
                          console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ—Ö–æ–¥–µ –Ω–∞ –ø—Ä–æ–±–Ω—ã–π –ø–µ—Ä–∏–æ–¥:', error);
                          toast.error('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ–≤–µ—Å—Ç–∏ –Ω–∞ –ø—Ä–æ–±–Ω—ã–π –ø–µ—Ä–∏–æ–¥');
                        } finally {
                          setIsSwitchingToTrial(false);
                        }
                        }}
                        className="bg-gradient-to-r from-red-500 to-red-600 hover:from-red-600 hover:to-red-700 text-white px-8 py-4 rounded-2xl text-lg font-semibold transition-all duration-300 transform hover:scale-105 shadow-lg hover:shadow-xl"
                        disabled={isSwitchingToTrial}
                      >
                        {isSwitchingToTrial ? (
                          <span className="flex items-center gap-3">
                            <span className="h-5 w-5 border-2 border-white border-t-transparent rounded-full animate-spin"></span>
                            –ü–µ—Ä–µ—Ö–æ–¥...
                          </span>
                        ) : (
                          <span className="flex items-center gap-2">
                            <RefreshCw className="w-5 h-5" />
                            –ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ –ø—Ä–æ–±–Ω—ã–π
                          </span>
                        )}
                      </Button>
                          <p className="text-xs text-gray-500 text-center max-w-xs">
                            –û—Ç–º–µ–Ω–∞ —Ç–µ–∫—É—â–µ–π –ø–æ–¥–ø–∏—Å–∫–∏ –∏ –ø–µ—Ä–µ—Ö–æ–¥ –Ω–∞ –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π –ø—Ä–æ–±–Ω—ã–π –ø–µ—Ä–∏–æ–¥
                          </p>
                        </div>
                    </div>
                  )}
                </div>
              </div>
            ) : (
              <div className="mt-8 p-4 bg-blue-50 rounded-lg border border-blue-200">
                <div className="flex items-center justify-center gap-4">
                  <div className="text-center">
                    <p className="text-sm text-blue-600 mb-2">–î–ª—è –≤—ã–±–æ—Ä–∞ –ø–ª–∞—Ç–Ω—ã—Ö —Ç–∞—Ä–∏—Ñ–æ–≤ —Ç—Ä–µ–±—É–µ—Ç—Å—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è</p>
                    <div className="flex gap-3">
                      <Button asChild size="sm" className="bg-blue-600 hover:bg-blue-700">
                        <Link href="/login">–í–æ–π—Ç–∏</Link>
                      </Button>
                      <Button asChild variant="outline" size="sm" className="border-blue-300 text-blue-600 hover:bg-blue-50">
                        <Link href="/register">–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è</Link>
                      </Button>
                    </div>
                  </div>
                </div>
              </div>
            )}
          </div>
        </section>

      {/* Pricing Plans */}
      <section className="px-4 sm:px-6 lg:px-8 pb-16 relative">
        {/* –î–µ–∫–æ—Ä–∞—Ç–∏–≤–Ω—ã–π —Ñ–æ–Ω */}
        <div className="absolute inset-0 bg-gradient-to-br from-green-50/30 via-transparent to-emerald-50/30 rounded-3xl"></div>
        <div className="relative max-w-7xl mx-auto">
          {isLoadingPlans ? (
            <div className="flex justify-center items-center py-20">
              <div className="text-center">
                <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-green-600 mx-auto mb-4"></div>
                <p className="text-gray-600">–ó–∞–≥—Ä—É–∑–∫–∞ —Ç–∞—Ä–∏—Ñ–æ–≤...</p>
              </div>
            </div>
          ) : (
            <div className="grid gap-8 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-5">
            {plans.map((plan, index) => (
              <div
                key={plan.name}
                className={`relative rounded-2xl sm:rounded-3xl border-0 bg-gradient-to-br from-white to-gray-50/50 p-6 sm:p-8 transition-all duration-500 hover:scale-105 hover:shadow-2xl flex flex-col min-h-[500px] shadow-lg ${
                  plan.popular 
                    ? 'ring-4 ring-green-500/20 shadow-green-200/50 bg-gradient-to-br from-green-50/30 to-white' 
                    : 'hover:ring-2 hover:ring-green-300/30 hover:shadow-green-100/30'
                }`}
              >
                {plan.popular && (
                  <div className="absolute -top-4 sm:-top-5 left-1/2 transform -translate-x-1/2">
                    <div className="rounded-full bg-gradient-to-r from-green-500 via-emerald-500 to-teal-500 px-4 sm:px-5 py-2 sm:py-2.5 text-xs sm:text-sm font-semibold text-white flex items-center gap-2 shadow-lg animate-pulse">
                      <Star className="h-3 w-3 sm:h-4 sm:w-4 fill-current" />
                      –ü–æ–ø—É–ª—è—Ä–Ω—ã–π –≤—ã–±–æ—Ä
                    </div>
                  </div>
                )}
                {plan.isPromo && (
                  <div className="absolute -top-4 sm:-top-5 right-4">
                    <div className="rounded-full bg-gradient-to-r from-orange-500 via-red-500 to-pink-500 px-4 sm:px-5 py-2 sm:py-2.5 text-xs sm:text-sm font-semibold text-white flex items-center gap-2 shadow-lg animate-bounce">
                      <Zap className="h-3 w-3 sm:h-4 sm:w-4 fill-current" />
                      –ü—Ä–æ–º–æ
                    </div>
                  </div>
                )}

                <div className="text-center mb-6 sm:mb-8 flex-1 flex flex-col justify-center">
                  <h3 className="text-xl sm:text-2xl font-bold bg-gradient-to-r from-gray-900 to-gray-700 bg-clip-text text-transparent mb-3">{plan.name}</h3>
                  <p className="text-sm sm:text-base text-gray-600 mb-4 sm:mb-6 leading-relaxed">{plan.description}</p>
                  <div className="mb-4 p-4 bg-gradient-to-r from-gray-50 to-green-50/30 rounded-xl border border-gray-100">
                    <span className="text-3xl sm:text-4xl font-bold bg-gradient-to-r from-green-600 to-emerald-600 bg-clip-text text-transparent">{plan.price}</span>
                    <span className="text-gray-500 text-sm ml-2">{plan.period}</span>
                  </div>
                </div>

                <div className="flex-1 flex flex-col justify-center mb-6">
                  {/* –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é (–º–µ–Ω—å—à–µ –¥–ª—è –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω–æ–≥–æ) */}
                  <ul className="space-y-3 sm:space-y-4">
                    {plan.features.slice(0, plan.name.includes('–ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–π') ? 3 : 3).map((feature: string, idx: number) => (
                      <li key={idx} className="flex items-start gap-3 p-2 rounded-lg hover:bg-green-50/50 transition-all duration-300 hover:scale-105">
                        <div className="flex-shrink-0 w-5 h-5 bg-green-100 rounded-full flex items-center justify-center transition-all duration-300 hover:bg-green-200 hover:scale-110">
                          <Check className="h-3 w-3 text-green-600" />
                        </div>
                        <span className="text-sm text-gray-700 leading-relaxed">{feature}</span>
                    </li>
                  ))}
                </ul>
                  
                  {/* –ï—Å–ª–∏ —Ñ—É–Ω–∫—Ü–∏–π –±–æ–ª—å—à–µ –ø–æ–∫–∞–∑–∞–Ω–Ω—ã—Ö –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É "–ü–æ–∫–∞–∑–∞—Ç—å –µ—â–µ" */}
                  {plan.features.length > (plan.name.includes('–ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–π') ? 3 : 3) && (
                    <div className="mt-4 text-center">
                      <button
                        onClick={() => toggleFeaturesExpansion(plan.id)}
                        onMouseEnter={() => setExpandedFeatures(prev => ({ ...prev, [plan.id]: true }))}
                        onMouseLeave={() => setExpandedFeatures(prev => ({ ...prev, [plan.id]: false }))}
                        className="text-sm text-green-600 hover:text-green-700 font-medium transition-colors duration-200 flex items-center gap-2 mx-auto"
                      >
                        {expandedFeatures[plan.id] ? '–°–≤–µ—Ä–Ω—É—Ç—å' : `–ü–æ–∫–∞–∑–∞—Ç—å –µ—â–µ ${plan.features.length - (plan.name.includes('–ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–π') ? 3 : 3)}`}
                        <svg 
                          className={`w-4 h-4 transition-transform duration-500 ease-in-out ${expandedFeatures[plan.id] ? 'rotate-180' : ''}`}
                          fill="none" 
                          stroke="currentColor" 
                          viewBox="0 0 24 24"
                        >
                          <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M19 9l-7 7-7-7" />
                        </svg>
                      </button>
                    </div>
                  )}
                  
                  {/* –†–∞–∑–≤–µ—Ä–Ω—É—Ç—ã–π —Å–ø–∏—Å–æ–∫ —Ñ—É–Ω–∫—Ü–∏–π (–ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–∏–∏) */}
                  {expandedFeatures[plan.id] && plan.features.length > (plan.name.includes('–ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–π') ? 3 : 3) && (
                    <ul className="space-y-3 sm:space-y-4 mt-4 transition-all duration-700 ease-in-out transform opacity-100 scale-100 animate-in slide-in-from-top-2 duration-700">
                      {plan.features.slice(plan.name.includes('–ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–π') ? 3 : 3).map((feature: string, idx: number) => (
                        <li 
                          key={idx + (plan.name.includes('–ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–π') ? 3 : 3)} 
                          className="flex items-start gap-3 p-2 rounded-lg hover:bg-green-50/50 transition-all duration-500 ease-in-out hover:scale-105 animate-in slide-in-from-top-2 duration-500"
                          style={{ animationDelay: `${idx * 100}ms` }}
                        >
                          <div className="flex-shrink-0 w-5 h-5 bg-green-100 rounded-full flex items-center justify-center transition-all duration-300 hover:bg-green-200 hover:scale-110">
                            <Check className="h-3 w-3 text-green-600" />
                          </div>
                          <span className="text-sm text-gray-700 leading-relaxed">{feature}</span>
                        </li>
                      ))}
                    </ul>
                  )}
                </div>

                <Button 
                  onClick={() => handleTariffSelect(plan)}
                  disabled={loadingStates[plan.id]}
                  className={`w-full py-3 sm:py-4 text-base sm:text-lg font-semibold mt-auto rounded-xl transition-all duration-300 transform hover:scale-105 ${
                    plan.popular
                      ? 'bg-gradient-to-r from-green-500 via-emerald-500 to-teal-500 hover:from-green-600 hover:via-emerald-600 hover:to-teal-600 text-white shadow-lg hover:shadow-xl'
                      : 'bg-gradient-to-r from-gray-800 to-gray-900 hover:from-gray-700 hover:to-gray-800 text-white shadow-lg hover:shadow-xl'
                  }`}
                >
                  {loadingStates[plan.id] ? (
                    <div className="flex items-center gap-3">
                      <div className="animate-spin rounded-full h-5 w-5 border-2 border-white border-t-transparent"></div>
                      <span className="font-medium">–ó–∞–≥—Ä—É–∑–∫–∞...</span>
                    </div>
                  ) : (
                    plan.cta
                  )}
                </Button>
              </div>
            ))}
          </div>
          )}
        </div>
      </section>

      {/* Enterprise Plan */}
      <section className="px-4 sm:px-6 lg:px-8 pb-16">
        <div className="max-w-4xl mx-auto">
          <div className="rounded-xl sm:rounded-2xl border-2 border-gray-300 bg-gradient-to-r from-gray-900 to-gray-800 p-6 sm:p-8 text-white">
            <div className="text-center mb-6 sm:mb-8">
              <h3 className="text-2xl sm:text-3xl font-bold mb-3 sm:mb-4">{enterprise.name}</h3>
              <p className="text-lg sm:text-xl text-gray-300">{enterprise.description}</p>
            </div>
            
            <div className="grid md:grid-cols-2 gap-6 sm:gap-8 mb-6 sm:mb-8">
              <div>
                <h4 className="text-base sm:text-lg font-semibold mb-3 sm:mb-4 text-blue-300">–ß—Ç–æ –≤–∫–ª—é—á–µ–Ω–æ:</h4>
                <ul className="space-y-2 sm:space-y-3">
                  {enterprise.features.slice(0, 4).map((feature: string, idx: number) => (
                    <li key={idx} className="flex items-center gap-2 sm:gap-3">
                      <Check className="h-4 w-4 sm:h-5 sm:w-5 text-blue-400 flex-shrink-0" />
                      <span className="text-sm sm:text-base text-gray-200">{feature}</span>
                    </li>
                  ))}
                </ul>
              </div>
              <div>
                <h4 className="text-base sm:text-lg font-semibold mb-3 sm:mb-4 text-blue-300">–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ:</h4>
                <ul className="space-y-2 sm:space-y-3">
                  {enterprise.features.slice(4).map((feature: string, idx: number) => (
                    <li key={idx} className="flex items-center gap-2 sm:gap-3">
                      <Check className="h-4 w-4 sm:h-5 sm:w-5 text-blue-400 flex-shrink-0" />
                      <span className="text-sm sm:text-base text-gray-200">{feature}</span>
                    </li>
                  ))}
                </ul>
              </div>
            </div>
            
            <div className="text-center">
              <Button asChild variant="outline" size="lg" className="border-white text-white hover:bg-white hover:text-gray-900 px-6 sm:px-8 py-2.5 sm:py-3 text-base sm:text-lg">
                <Link href="/app/dashboard">–û–±—Å—É–¥–∏—Ç—å —É—Å–ª–æ–≤–∏—è</Link>
              </Button>
            </div>
          </div>
        </div>
      </section>

      {/* Features Comparison */}
      <section className="px-4 sm:px-6 lg:px-8 pb-16 bg-white">
        <div className="max-w-6xl mx-auto">
          <div className="text-center mb-12">
            <h2 className="text-3xl font-bold text-gray-900 mb-4">
              –°—Ä–∞–≤–Ω–µ–Ω–∏–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π
            </h2>
            <p className="text-xl text-gray-600">
              –í—ã–±–µ—Ä–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏–∏, –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω—ã –∏–º–µ–Ω–Ω–æ –≤–∞—à–µ–º—É –±–∏–∑–Ω–µ—Å—É
            </p>
          </div>
          
          <div className="overflow-x-auto">
            <table className="w-full">
              <thead>
                <tr className="border-b border-gray-200">
                  <th className="text-left py-4 px-6 text-lg font-semibold text-gray-900">–§—É–Ω–∫—Ü–∏—è</th>
                  <th className="text-center py-4 px-6 text-sm font-medium text-gray-600">–°—Ç–∞—Ä—Ç</th>
                  <th className="text-center py-4 px-6 text-sm font-medium text-gray-600">–ü—Ä–æ</th>
                  <th className="text-center py-4 px-6 text-sm font-medium text-gray-600">–ë–∏–∑–Ω–µ—Å</th>
                </tr>
              </thead>
              <tbody className="divide-y divide-gray-100">
                {[
                  { feature: '–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –Ω–∞ —Å–∞–π—Ç–µ', start: true, pro: true, business: true },
                  { feature: '–§–æ—Ä–º–∞ –∑–∞—è–≤–æ–∫', start: true, pro: true, business: true },
                  { feature: '–ë–∞–∑–æ–≤–∞—è CRM', start: true, pro: true, business: true },
                  { feature: 'SMS-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è', start: false, pro: true, business: true },
                  { feature: '–ù–µ–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–µ –∑–∞—è–≤–∫–∏', start: false, pro: true, business: true },
                  { feature: '–†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞', start: false, pro: true, business: true },
                  { feature: 'Webhook –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏', start: false, pro: true, business: true },
                  { feature: '–ö–æ–º–∞–Ω–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π', start: false, pro: false, business: true },
                  { feature: 'API –¥–æ—Å—Ç—É–ø', start: false, pro: false, business: true },
                  { feature: '–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä', start: false, pro: false, business: true }
                ].map((row: any, index: number) => (
                  <tr key={index} className="hover:bg-gray-50">
                    <td className="py-4 px-6 font-medium text-gray-900">{row.feature}</td>
                    <td className="py-4 px-6 text-center">
                      {row.start ? <Check className="h-5 w-5 text-green-500 mx-auto" /> : <span className="text-gray-300">‚Äî</span>}
                    </td>
                    <td className="py-4 px-6 text-center">
                      {row.pro ? <Check className="h-5 w-5 text-green-500 mx-auto" /> : <span className="text-gray-300">‚Äî</span>}
                    </td>
                    <td className="py-4 px-6 text-center">
                      {row.business ? <Check className="h-5 w-5 text-green-500 mx-auto" /> : <span className="text-gray-300">‚Äî</span>}
                    </td>
                  </tr>
                ))}
              </tbody>
            </table>
          </div>
        </div>
      </section>

      {/* FAQ Section */}
      <section className="px-4 sm:px-6 lg:px-8 py-16 bg-gradient-to-br from-green-50 to-emerald-50">
        <div className="max-w-4xl mx-auto">
          <div className="text-center mb-12">
            <h2 className="text-3xl font-bold text-gray-900 mb-4">
              –ß–∞—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã –æ —Ç–∞—Ä–∏—Ñ–∞—Ö
            </h2>
            <p className="text-xl text-gray-600">
              –û—Ç–≤–µ—Ç—ã –Ω–∞ –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã –æ —Ü–µ–Ω–æ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–∏ –∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è—Ö
            </p>
          </div>
          
          <div className="grid gap-6">
            {[
              {
                question: '–ú–æ–∂–Ω–æ –ª–∏ –∏–∑–º–µ–Ω–∏—Ç—å —Ç–∞—Ä–∏—Ñ –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è?',
                answer: '–î–∞, –≤—ã –º–æ–∂–µ—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å —Ç–∞—Ä–∏—Ñ –≤ –ª—é–±–æ–µ –≤—Ä–µ–º—è —á–µ—Ä–µ–∑ –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç. –ü—Ä–∏ –ø–µ—Ä–µ—Ö–æ–¥–µ –Ω–∞ –±–æ–ª–µ–µ –¥–æ—Ä–æ–≥–æ–π –ø–ª–∞–Ω –æ–ø–ª–∞—Ç–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—Å—è –ø—Ä–æ–ø–æ—Ä—Ü–∏–æ–Ω–∞–ª—å–Ω–æ, –ø—Ä–∏ –ø–µ—Ä–µ—Ö–æ–¥–µ –Ω–∞ –±–æ–ª–µ–µ –¥–µ—à–µ–≤—ã–π ‚Äî —Ä–∞–∑–Ω–∏—Ü–∞ –∑–∞—á–∏—Å–ª—è–µ—Ç—Å—è –≤ —Å—á–µ—Ç —Å–ª–µ–¥—É—é—â–µ–≥–æ –ø–µ—Ä–∏–æ–¥–∞.'
              },
              {
                question: '–ß—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –ø—Ä–∏ –æ—Ç–∫–ª—é—á–µ–Ω–∏–∏ –ø–æ–¥–ø–∏—Å–∫–∏?',
                answer: '–ü—Ä–∏ –æ—Ç–∫–ª—é—á–µ–Ω–∏–∏ –ø–æ–¥–ø–∏—Å–∫–∏ –≤—ã —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç–µ –¥–æ—Å—Ç—É–ø –∫ –±–∞–∑–æ–≤–æ–º—É —Ç–∞—Ä–∏—Ñ—É "–°—Ç–∞—Ä—Ç" –Ω–∞–≤—Å–µ–≥–¥–∞. –í—Å–µ –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è. –í—ã –º–æ–∂–µ—Ç–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É –≤ –ª—é–±–æ–µ –≤—Ä–µ–º—è.'
              },
              {
                question: '–ï—Å—Ç—å –ª–∏ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –∑–∞—è–≤–æ–∫?',
                answer: '–í —Ç–∞—Ä–∏—Ñ–µ "–°—Ç–∞—Ä—Ç" –µ—Å—Ç—å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –∑–∞—è–≤–æ–∫. –í —Ç–∞—Ä–∏—Ñ–∞—Ö "–ü—Ä–æ" –∏ "–ë–∏–∑–Ω–µ—Å" –∑–∞—è–≤–∫–∏ –Ω–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω—ã. –ú—ã —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º –Ω–∞—á–∞—Ç—å —Å –±–µ—Å–ø–ª–∞—Ç–Ω–æ–≥–æ —Ç–∞—Ä–∏—Ñ–∞ –¥–ª—è –æ—Ü–µ–Ω–∫–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π.'
              },
              {
                question: '–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç–µ –ª–∏ –≤—ã –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è?',
                answer: '–î–∞, –¥–ª—è –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤ –º—ã —Ä–∞–∑—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è –ø–æ–¥ –≤–∞—à–∏ –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç–∏. –≠—Ç–æ –º–æ–∂–µ—Ç –≤–∫–ª—é—á–∞—Ç—å —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏, –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –∏–ª–∏ –∞–¥–∞–ø—Ç–∞—Ü–∏—é –ø–æ–¥ –≤–∞—à–∏ –±–∏–∑–Ω–µ—Å-–ø—Ä–æ—Ü–µ—Å—Å—ã.'
              },
              {
                question: '–ö–∞–∫ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞?',
                answer: '–í —Ç–∞—Ä–∏—Ñ–µ "–°—Ç–∞—Ä—Ç" –¥–æ—Å—Ç—É–ø–Ω–∞ email –ø–æ–¥–¥–µ—Ä–∂–∫–∞. –í —Ç–∞—Ä–∏—Ñ–∞—Ö "–ü—Ä–æ" –∏ "–ë–∏–∑–Ω–µ—Å" ‚Äî –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ —á–µ—Ä–µ–∑ —á–∞—Ç –∏ —Ç–µ–ª–µ—Ñ–æ–Ω. –ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–º –∫–ª–∏–µ–Ω—Ç–∞–º –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç—Å—è –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä.'
              }
                            ].map((item: any, index: number) => (
              <details key={index} className="group rounded-xl border border-gray-200 bg-white">
                <summary className="cursor-pointer list-none p-6 hover:bg-gray-50 transition-colors">
                  <div className="flex items-center justify-between">
                    <h3 className="text-lg font-medium text-gray-900 pr-4">{item.question}</h3>
                    <div className="h-6 w-6 text-gray-400 group-open:rotate-180 transition-transform">
                      ‚ñº
                    </div>
                  </div>
                </summary>
                <div className="px-6 pb-6">
                  <p className="text-gray-600 leading-relaxed">{item.answer}</p>
                </div>
              </details>
            ))}
          </div>
        </div>
      </section>

      {/* CTA Section */}
      <section className="px-4 sm:px-6 lg:px-8 py-16 bg-gradient-to-r from-green-600 to-emerald-600">
        <div className="max-w-4xl mx-auto text-center">
          <h2 className="text-3xl md:text-4xl font-bold text-white mb-6">
            –ì–æ—Ç–æ–≤—ã –Ω–∞—á–∞—Ç—å?
          </h2>
          <p className="text-xl text-blue-100 mb-8 leading-relaxed">
            –í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–π —Ç–∞—Ä–∏—Ñ –∏ –Ω–∞—á–Ω–∏—Ç–µ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞—Ç—å –æ–±—Ä–∞–±–æ—Ç–∫—É –∑–∞—è–≤–æ–∫ —É–∂–µ —Å–µ–≥–æ–¥–Ω—è
          </p>
          <div className="flex justify-center mb-8">
            <Button asChild size="lg" className="px-10 py-4 text-xl font-bold bg-white text-green-600 hover:bg-green-50 border-2 border-white hover:border-green-200 shadow-lg hover:shadow-xl transition-all duration-300 transform hover:scale-105">
              <Link href="/app/dashboard">–í–æ–π—Ç–∏ –≤ –∫–∞–±–∏–Ω–µ—Ç</Link>
            </Button>
          </div>
          <p className="text-sm text-green-200">
            –ù—É–∂–Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è? –°–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏: support@dezexpert.pro
          </p>
        </div>
      </section>
      </div>

      {/* Footer */}
      <Footer />
    </div>
  );
}


